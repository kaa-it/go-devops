// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "kaa-it@yandex.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "View"
                ],
                "summary": "Request to get HTML page with all metrics",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "tags": [
                    "Info"
                ],
                "summary": "Request for service health checking",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/update/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Update"
                ],
                "summary": "Request to update metric value in JSON format",
                "parameters": [
                    {
                        "description": "Metric update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Metric type is not supported",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/{category}/{name}/{value}": {
            "post": {
                "tags": [
                    "Update"
                ],
                "summary": "Request to update value of metric using URL params",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric type",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New metric value",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Metric type is not supported",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updates": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Update"
                ],
                "summary": "Request to update some metric value simultaneously in JSON format",
                "parameters": [
                    {
                        "description": "Batch metric update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Metrics"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/value/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "View"
                ],
                "summary": "Request to get metric value in JSON format",
                "parameters": [
                    {
                        "description": "Metric value request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewing.MetricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Metric type is not supported",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/{category}/{name}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "View"
                ],
                "summary": "Request to get value of metric by its category and name",
                "parameters": [
                    {
                        "enum": [
                            "gauge",
                            "counter"
                        ],
                        "type": "string",
                        "description": "Metric type",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Metric type is not supported",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Metrics": {
            "type": "object",
            "properties": {
                "delta": {
                    "description": "Delta - increment value for counter metric, for gauge metric is nil.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID - unique metric name.",
                    "type": "string"
                },
                "type": {
                    "description": "MType - metric type.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.MetricsType"
                        }
                    ]
                },
                "value": {
                    "description": "Value - new value for gauge metric, for counter metric is nil.",
                    "type": "number"
                }
            }
        },
        "api.MetricsType": {
            "type": "string",
            "enum": [
                "gauge",
                "counter"
            ],
            "x-enum-comments": {
                "CounterType": "counter metric type",
                "GaugeType": "gauge metric type"
            },
            "x-enum-varnames": [
                "GaugeType",
                "CounterType"
            ]
        },
        "viewing.MetricRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID - unique metric name.",
                    "type": "string"
                },
                "type": {
                    "description": "MType - metric type.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.MetricsType"
                        }
                    ]
                }
            }
        }
    },
    "tags": [
        {
            "description": "\"Request group for service health checking\"",
            "name": "Info"
        },
        {
            "description": "\"Request group for viewing collected metrics\"",
            "name": "View"
        },
        {
            "description": "\"Request group for updating metrics",
            "name": "Update"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8089",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Metric Service API",
	Description:      "Service for collect application metrics.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
